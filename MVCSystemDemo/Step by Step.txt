1. Views\Shared\_Layout.cshtml
link : https://docs.microsoft.com/en-us/aspnet/mvc/overview/getting-started/getting-started-with-ef-using-mvc/creating-an-entity-framework-data-model-for-an-asp-net-mvc-application

2. Install-Package EntityFramework

3. add Student, Course, Enrollment in Models

4. Create Data/SchoolContext.cs ( DB context)

5. Add ConnectionString in Web.config
  <connectionStrings>
    <add name="ConnectionString" connectionString="Data Source=(LocalDb)\MSSQLLocalDB;AttachDbFilename=|DataDirectory|\IdentityManualAgain.mdf;Initial Catalog=IdentityManualAgain;Integrated Security=True" providerName="System.Data.SqlClient" />
</connectionStrings>

6. Run 3 statements :
  Enable-Migrations. Thực hiện một lần trong project.
  Add-Migration và nhập tên InitDatabase. Mỗi lần có thay đổi thì thực hiện với nội dung thay đổi.
  Update-Database tiến hành thực hiện thay đổi vào database.

7. Seeding in Configuration.cs

8. Add Controller (the longest one)
     Model class: Student 
     Data context class: SchoolContext
     Controller name: StudentController

9. Run 2 statements ( view Students/Index)

10. Install Microsoft.jQuery.Unobtrusive-ajax

11. Edit file Views/Student/Index.cshtml ( Add Ajax + Paginate)

12. Edit fuction Index + add IndexAjax in StudentController

13. Add view from IndexAjax 

14. Install-Package PagedList.Mvc

15. Edit Index + IndexAjax in StudentController ( using PagedList)

16. Edit Views\Student\Index.cshtml (add pageList)
link: https://docs.microsoft.com/en-us/aspnet/mvc/overview/getting-started/getting-started-with-ef-using-mvc/sorting-filtering-and-paging-with-the-entity-framework-in-an-asp-net-mvc-application
     
17. Create About Page ( not required )

18. Warning : Update Model + Controller + Viewmodel => move to step 9

19. Implement CRUD 
link: https://docs.microsoft.com/en-us/aspnet/mvc/overview/getting-started/getting-started-with-ef-using-mvc/implementing-basic-crud-functionality-with-the-entity-framework-in-asp-net-mvc-application
Source Code : https://github.com/VHoangDotCom/WAD_SEM3/tree/main/MVCSystemDemo
View Model : https://github.com/VHoangDotCom/Projects_Sem3_Ap/blob/main/Web%20Application%20Development/HelloWorldSem2/HelloWorldSem2/Models/ViewModel/AdminViewModel.cs

20. Enhance + develop Entity
    [Column("FirstName")] in Models/Student

21. Load + update related data (Select) (Updating related data )
link : https://docs.microsoft.com/en-us/aspnet/mvc/overview/getting-started/getting-started-with-ef-using-mvc/reading-related-data-with-the-entity-framework-in-an-asp-net-mvc-application

22. Use async and stored procedures with EF
link: https://docs.microsoft.com/en-us/aspnet/mvc/overview/getting-started/getting-started-with-ef-using-mvc/async-and-stored-procedures-with-the-entity-framework-in-an-asp-net-mvc-application

23. Handle Concurrency with EF ( Delete objects when another are using or Update)
note: A concurrency conflict occurs when one user displays an entity's data in order to edit it, and
then another user updates the same entity's data before the first user's change is written to the 
database
link : https://docs.microsoft.com/en-us/aspnet/mvc/overview/getting-started/getting-started-with-ef-using-mvc/handling-concurrency-with-the-entity-framework-in-an-asp-net-mvc-application

24. implement inheritance in the data model
link : https://docs.microsoft.com/en-us/aspnet/mvc/overview/getting-started/getting-started-with-ef-using-mvc/implementing-inheritance-with-the-entity-framework-in-an-asp-net-mvc-application

25. advanced EF Scenarios
link : https://docs.microsoft.com/en-us/aspnet/mvc/overview/getting-started/getting-started-with-ef-using-mvc/advanced-entity-framework-scenarios-for-an-mvc-web-application
<dang xem>

26. ViewModelDemo
https://github.com/VHoangDotCom/Projects_Sem3_Ap/blob/main/Web%20Application%20Development/HelloWorldSem2/HelloWorldSem2/Models/ViewModel/AdminViewModel.cs

 DEPLOY TO AZURE (Sign in by GIt hub)
 TK : viethoang2001gun@gmail.com
 MK : thucu2001

1. Sign in to Microsif Azure
2. Choose : Create a resource -> See all -> New -> Web App + SQL
